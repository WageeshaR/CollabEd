version: "3.9"

services:
  java:
    image: maven:3-amazoncorretto-17
    container_name: java
    working_dir: /usr/src/app
    ports:
      - "8080:8080"
    volumes:
      - ../target/core-0.0.1-SNAPSHOT.jar:/usr/src/app/core.jar
    entrypoint: "java -jar core.jar"
    environment:
      DB_HOST: ${DB_HOST}
      SPRING_ACTIVE_PROFILE: ${SPRING_ACTIVE_PROFILE}
    depends_on:
      mongodb:
        condition: service_healthy
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'Health OK'
      interval: 1s
      timeout: 3s
      retries: 3
    volumes:
      - data:/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_AUTH_USERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_AUTH_PASSWORD: ${MONGO_ROOT_PASS}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGOEXPRESS_LOGIN}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGOEXPRESS_PASS}
    depends_on:
      mongodb:
        condition: service_healthy

volumes:
  data: {}

networks:
  default:
    name: app_network
